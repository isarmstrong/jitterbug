# Task ID: 6
# Title: Create Next.js Integration Package with App Router Support
# Status: pending
# Dependencies: 2, 5
# Priority: low
# Description: Build a Next.js integration package that provides a client component for log viewing and API routes for SSE endpoints, focused on essential functionality with app router compatibility.
# Details:
Create a dedicated Next.js package that integrates seamlessly with the Jitterbug debugging system. Implement a React client component that can display logs in real-time using the SSE transport system. The component should be lightweight, responsive, and provide filtering capabilities for different log levels and branches. Create API route handlers compatible with Next.js 13+ App Router that serve as SSE endpoints for streaming logs. Implement proper TypeScript definitions for all components and utilities. Include a simple setup function that automatically configures the integration with minimal configuration required. The package should export clear interfaces for the log viewer component, API route handlers, and any utility functions. Ensure compatibility with both Pages Router and App Router architectures. Design the client component to handle connection states, error recovery, and automatic reconnection to the SSE endpoint. Include proper cleanup mechanisms for component unmounting and connection disposal.

# Test Strategy:
Test the client component renders correctly and connects to SSE endpoints without errors. Verify compatibility with both App Router and Pages Router by creating test applications for each. Test log filtering and display functionality with various log levels and branch types. Validate TypeScript definitions are correct and provide proper intellisense. Test SSE connection handling including reconnection on network failures. Verify the setup function correctly initializes the integration with minimal configuration. Test component cleanup and memory management during mount/unmount cycles. Validate the package works correctly when installed as a dependency in fresh Next.js applications.
